@model ABCRetail.Cloud.Models.ViewModels.ChangePasswordViewModel
@{
    ViewData["Title"] = "Change Password";
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>Change Password</h1>
        <a asp-action="Profile" class="btn btn-outline-secondary">Back to Profile</a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-warning text-dark">
                    <h5 class="mb-0">
                        <i class="fas fa-key me-2"></i>Update Your Password
                    </h5>
                </div>
                <div class="card-body">
                    <form asp-action="ChangePassword" method="post">
                        @Html.AntiForgeryToken()

                        <div class="form-group mb-3">
                            <label asp-for="CurrentPassword" class="form-label">Current Password <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <input asp-for="CurrentPassword" class="form-control" type="password" required />
                                <button class="btn btn-outline-secondary" type="button" id="toggleCurrentPassword">
                                    <i class="fas fa-eye" id="currentPasswordIcon"></i>
                                </button>
                            </div>
                            <span asp-validation-for="CurrentPassword" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="NewPassword" class="form-label">New Password <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <input asp-for="NewPassword" class="form-control" type="password" required />
                                <button class="btn btn-outline-secondary" type="button" id="toggleNewPassword">
                                    <i class="fas fa-eye" id="newPasswordIcon"></i>
                                </button>
                            </div>
                            <div class="form-text">
                                Password must be at least 6 characters long.
                            </div>
                            <span asp-validation-for="NewPassword" class="text-danger"></span>
                            <div id="passwordStrength" class="mt-2"></div>
                        </div>

                        <div class="form-group mb-4">
                            <label asp-for="ConfirmPassword" class="form-label">Confirm New Password <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <input asp-for="ConfirmPassword" class="form-control" type="password" required />
                                <button class="btn btn-outline-secondary" type="button" id="toggleConfirmPassword">
                                    <i class="fas fa-eye" id="confirmPasswordIcon"></i>
                                </button>
                            </div>
                            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                            <div id="passwordMatch" class="mt-2"></div>
                        </div>

                        <div class="form-group">
                            <button type="submit" class="btn btn-warning me-2" id="submitBtn">
                                <i class="fas fa-key me-1"></i> Change Password
                            </button>
                            <a asp-action="Profile" class="btn btn-secondary">Cancel</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-shield-alt me-2"></i>Password Security Tips
                    </h5>
                </div>
                <div class="card-body">
                    <ul class="list-unstyled mb-0">
                        <li class="mb-2">
                            <i class="fas fa-check text-success me-2"></i>
                            Use at least 8 characters for better security
                        </li>
                        <li class="mb-2">
                            <i class="fas fa-check text-success me-2"></i>
                            Include uppercase and lowercase letters
                        </li>
                        <li class="mb-2">
                            <i class="fas fa-check text-success me-2"></i>
                            Add numbers and special characters
                        </li>
                        <li class="mb-2">
                            <i class="fas fa-check text-success me-2"></i>
                            Avoid common words or personal information
                        </li>
                        <li class="mb-2">
                            <i class="fas fa-check text-success me-2"></i>
                            Don't reuse passwords from other accounts
                        </li>
                        <li class="mb-0">
                            <i class="fas fa-check text-success me-2"></i>
                            Change your password regularly
                        </li>
                    </ul>
                </div>
            </div>

            <div class="card mt-3">
                <div class="card-header bg-secondary text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-question-circle me-2"></i>Need Help?
                    </h5>
                </div>
                <div class="card-body">
                    <p class="mb-2">If you're having trouble changing your password:</p>
                    <ul class="mb-0">
                        <li>Make sure you're entering your current password correctly</li>
                        <li>Ensure your new password meets all requirements</li>
                        <li>Contact our support team if you continue having issues</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Password visibility toggles
            function setupPasswordToggle(toggleBtnId, inputName, iconId) {
                const toggleBtn = document.getElementById(toggleBtnId);
                const passwordInput = document.querySelector(`input[name="${inputName}"]`);
                const icon = document.getElementById(iconId);

                toggleBtn.addEventListener('click', function() {
                    if (passwordInput.type === 'password') {
                        passwordInput.type = 'text';
                        icon.classList.remove('fa-eye');
                        icon.classList.add('fa-eye-slash');
                    } else {
                        passwordInput.type = 'password';
                        icon.classList.remove('fa-eye-slash');
                        icon.classList.add('fa-eye');
                    }
                });
            }

            setupPasswordToggle('toggleCurrentPassword', 'CurrentPassword', 'currentPasswordIcon');
            setupPasswordToggle('toggleNewPassword', 'NewPassword', 'newPasswordIcon');
            setupPasswordToggle('toggleConfirmPassword', 'ConfirmPassword', 'confirmPasswordIcon');

            // Password strength indicator
            const newPasswordInput = document.querySelector('input[name="NewPassword"]');
            const passwordStrengthDiv = document.getElementById('passwordStrength');
            const confirmPasswordInput = document.querySelector('input[name="ConfirmPassword"]');
            const passwordMatchDiv = document.getElementById('passwordMatch');
            const submitBtn = document.getElementById('submitBtn');

            function checkPasswordStrength(password) {
                let strength = 0;
                let feedback = [];

                if (password.length >= 8) {
                    strength++;
                } else {
                    feedback.push('at least 8 characters');
                }

                if (/[a-z]/.test(password)) {
                    strength++;
                } else {
                    feedback.push('lowercase letters');
                }

                if (/[A-Z]/.test(password)) {
                    strength++;
                } else {
                    feedback.push('uppercase letters');
                }

                if (/[0-9]/.test(password)) {
                    strength++;
                } else {
                    feedback.push('numbers');
                }

                if (/[^A-Za-z0-9]/.test(password)) {
                    strength++;
                } else {
                    feedback.push('special characters');
                }

                let strengthText = '';
                let strengthClass = '';

                if (strength < 2) {
                    strengthText = 'Weak';
                    strengthClass = 'text-danger';
                } else if (strength < 4) {
                    strengthText = 'Medium';
                    strengthClass = 'text-warning';
                } else {
                    strengthText = 'Strong';
                    strengthClass = 'text-success';
                }

                return { strength: strengthText, class: strengthClass, feedback };
            }

            newPasswordInput.addEventListener('input', function() {
                const password = this.value;
                if (password) {
                    const result = checkPasswordStrength(password);
                    passwordStrengthDiv.innerHTML = `<small class="${result.class}">Password strength: ${result.strength}</small>`;

                    if (result.feedback.length > 0) {
                        passwordStrengthDiv.innerHTML += `<br><small class="text-muted">Add: ${result.feedback.join(', ')}</small>`;
                    }
                } else {
                    passwordStrengthDiv.innerHTML = '';
                }
                checkPasswordMatch();
            });

            confirmPasswordInput.addEventListener('input', checkPasswordMatch);

            function checkPasswordMatch() {
                const newPassword = newPasswordInput.value;
                const confirmPassword = confirmPasswordInput.value;

                if (confirmPassword) {
                    if (newPassword === confirmPassword) {
                        passwordMatchDiv.innerHTML = '<small class="text-success"><i class="fas fa-check me-1"></i>Passwords match</small>';
                    } else {
                        passwordMatchDiv.innerHTML = '<small class="text-danger"><i class="fas fa-times me-1"></i>Passwords do not match</small>';
                    }
                } else {
                    passwordMatchDiv.innerHTML = '';
                }
            }

            // Auto-dismiss success messages
            const successAlert = document.querySelector('.alert-success');
            if (successAlert) {
                setTimeout(function() {
                    const bsAlert = new bootstrap.Alert(successAlert);
                    bsAlert.close();
                }, 5000);
            }

            // Form validation enhancement
            const form = document.querySelector('form');
            form.addEventListener('submit', function(e) {
                const newPassword = newPasswordInput.value;
                const confirmPassword = confirmPasswordInput.value;

                if (newPassword !== confirmPassword) {
                    e.preventDefault();
                    passwordMatchDiv.innerHTML = '<small class="text-danger"><i class="fas fa-times me-1"></i>Passwords must match before submitting</small>';
                    confirmPasswordInput.focus();
                }
            });
        });
    </script>
}